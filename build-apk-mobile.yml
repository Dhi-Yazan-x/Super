name: Build APK & Windows

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12.2
  FLUTTER_VERSION: 3.24.0

jobs:
  build-apk:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # إضافة دعم لكل من Ubuntu و Windows

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install openpyxl  # تثبيت مكتبة openpyxl
        pip install tk  # تثبيت مكتبة tkinter (إذا لم تكن مثبتة بشكل افتراضي)
      shell: bash

    - name: Install Cython
      run: |
        python -m pip install Cython  # تثبيت Cython
      shell: bash

    - name: Install setuptools
      run: |
        python -m pip install --upgrade setuptools
      shell: bash

    - name: Install Flet CLI
      run: |
        curl -fsSL https://flet.dev/install | bash
        echo "export PATH=\"$HOME/.flet/bin:$PATH\"" >> $GITHUB_ENV
      shell: bash

    - name: Install required dependencies for Linux build
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev
        sudo apt-get install -y python3-tk  # تثبيت tkinter على Ubuntu
      shell: bash

    - name: Install required dependencies for Windows build
      if: runner.os == 'Windows'
      run: |
        choco install ninja  # تثبيت ninja على Windows باستخدام Chocolatey
        choco install gtk  # تثبيت GTK على Windows
        pip install python-tk  # تثبيت tkinter على Windows
      shell: powershell

    - name: Check adb version
      run: adb version
      shell: bash

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Run Flutter doctor
      run: flutter doctor
      shell: bash

    - name: Setup Java JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Flet Build APK
      run: |
        flutter config --no-analytics
        flet build apk --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION
      shell: bash

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: apk-build-artifact
        path: build/apk
        if-no-files-found: warn
        overwrite: false
